# include<stdio.h>
# include<stdlib.h>
typedef struct Node{
	int Data;
	struct Node *Left,*Right;
}BitNode,*Bitree;
Bitree CreatBitree(){
	Bitree T;
	int a;
	scanf("%d",&a);
	if(a==0){
		T=NULL;
	}
	else{
		T=(Bitree)malloc(sizeof(BitNode));
		T->Data =a;
		T->Left =CreatBitree();
		T->Right =CreatBitree();
	}
	return T;
}
void PrintBitree(Bitree T,int i){
	int j;
	if(T){
		PrintBitree(T->Right ,i+1);
	for(j=0;j<i;++j){
		printf("    ");
	} 
	printf("%d\n",T->Data );
	PrintBitree(T->Left ,i+1); 	
	}

}
//前序 
void ProBitree(Bitree T){
	if(T){
	printf("%d",T->Data );
    ProBitree(T->Left );
    ProBitree(T->Right );	
	}
	
}

//中序 
void InBitree(Bitree T){
	if(T){
	ProBitree(T->Left );
	printf("%d",T->Data );
	ProBitree(T->Right );	
	}
	
}

//后序 
void postBitree(Bitree T){
	if(T){
	ProBitree(T->Left );
	ProBitree(T->Right );
	printf("%d",T->Data );	
	}

}
void LevelBitree(){
	
}
int HeightBitree(Bitree T){
	int hr,hl,maxh;
	if(T){
	 hr=HeightBitree(T->Right);
	 hl=HeightBitree(T->Left);
	 maxh=hl>hr?hl:hr;
	return maxh+1;	
	}
	return 0;
}
int main(){
Bitree T;
int a;
T=CreatBitree();
PrintBitree(T,1);
ProBitree(T);
printf("\n");
InBitree(T);
printf("\n");
postBitree(T);
printf("\n");
a=HeightBitree(T);
printf("%d",a);	
}
